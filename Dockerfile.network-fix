# Multi-stage build for osvm CLI with improved network handling
FROM rust:1.87-slim AS builder

# Install dependencies with retry logic and multiple mirror fallbacks
RUN set -ex && \
    for attempt in 1 2 3 4 5; do \
        echo "Attempt $attempt to update package lists..." && \
        apt-get update && break || \
        if [ $attempt -lt 5 ]; then \
            echo "Failed, trying alternative mirror..." && \
            case $attempt in \
                2) echo "deb http://ftp.us.debian.org/debian bookworm main" > /etc/apt/sources.list ;; \
                3) echo "deb http://mirror.steadfast.net/debian bookworm main" > /etc/apt/sources.list ;; \
                4) echo "deb http://mirrors.kernel.org/debian bookworm main" > /etc/apt/sources.list ;; \
            esac && \
            sleep 5; \
        else \
            echo "All attempts failed" && exit 1; \
        fi; \
    done && \
    apt-get install -y \
        pkg-config \
        libssl-dev \
        libudev-dev \
        perl \
        make \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./
COPY rust-toolchain.toml ./

# Copy vendor directory if it exists
COPY vendor/ ./vendor/

# Copy source code
COPY src/ ./src/

# Copy templates directory (required by include_str! macros in audit_templates.rs)
COPY templates/ ./templates/

# Build the application
RUN cargo build --release

# Runtime image
FROM debian:bookworm-slim

# Install runtime dependencies with retry logic
RUN set -ex && \
    for attempt in 1 2 3 4 5; do \
        echo "Attempt $attempt to update package lists..." && \
        apt-get update && break || \
        if [ $attempt -lt 5 ]; then \
            echo "Failed, trying alternative mirror..." && \
            case $attempt in \
                2) echo "deb http://ftp.us.debian.org/debian bookworm main" > /etc/apt/sources.list ;; \
                3) echo "deb http://mirror.steadfast.net/debian bookworm main" > /etc/apt/sources.list ;; \
                4) echo "deb http://mirrors.kernel.org/debian bookworm main" > /etc/apt/sources.list ;; \
            esac && \
            sleep 5; \
        else \
            echo "All attempts failed" && exit 1; \
        fi; \
    done && \
    apt-get install -y \
        ca-certificates \
        libudev1 \
        libssl3 \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 osvm

# Copy the binary from builder stage
COPY --from=builder /app/target/release/osvm /usr/local/bin/osvm

# Make it executable
RUN chmod +x /usr/local/bin/osvm

# Switch to non-root user
USER osvm

# Set the entrypoint
ENTRYPOINT ["/usr/local/bin/osvm"]
CMD ["--help"]