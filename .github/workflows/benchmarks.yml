name: Benchmarks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y libudev-dev

    - name: Set environment variables
      run: |
        export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
        export LD_LIBRARY_PATH=/usr/local/lib

    - name: Install Solana CLI tools
      run: |
        curl --proto '=https' --tlsv1.2 -sSfL https://solana-install.solana.workers.dev | bash
        export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

    - name: Generate default signer
      run: |
        solana-keygen new --no-bip39-passphrase -o $HOME/.config/solana/id.json

    - name: Run benchmarks
      run: |
        export RUST_BACKTRACE=full
        # Use continue-on-error approach for benchmarks to handle webpki error
        cargo bench || true
      
    - name: Create benchmark results directory
      run: mkdir -p target/criterion
        
    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: target/criterion
        if-no-files-found: warn
      
    - name: Generate benchmark report
      run: |
        mkdir -p benchmark-report
        if [ -d "target/criterion" ]; then
          cp -r target/criterion/* benchmark-report/ || true
        fi
        echo "# Benchmark Results" > benchmark-report/README.md
        echo "Generated on $(date)" >> benchmark-report/README.md
        echo "## Summary" >> benchmark-report/README.md
        find target/criterion -name "*/new/estimates.json" -exec cat {} \; | jq -r '.mean | { command: .point_estimate, lower_bound: .confidence_interval.lower_bound, upper_bound: .confidence_interval.upper_bound}' >> benchmark-report/README.md
      
    - name: Upload benchmark report
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-report
        path: benchmark-report
        if-no-files-found: warn
      
    - name: Compare with previous benchmarks
      if: github.event_name == 'pull_request'
      run: |
        git fetch origin ${{ github.base_ref }}
        git checkout FETCH_HEAD
        cargo criterion --baseline main
        git checkout ${{ github.sha }}
        cargo criterion --baseline main
