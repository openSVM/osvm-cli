Implement &optional and &key parameters for OVSM functions following the incremental approach (Option A).

**Context:**
- Current coverage: 83% Common Lisp
- Target: +3% (add &optional/&key support)
- Reference: NEXT_SESSION_PLAN.md (comprehensive guide)

**What to implement:**

1. **Optional parameters** with defaults:
   (defun greet (name &optional (greeting "Hello") (punct "!"))
     (str greeting " " name punct))

   (greet "Alice")           → "Hello Alice!"
   (greet "Bob" "Hi")        → "Hi Bob!"
   (greet "Charlie" "Hey" "?") → "Hey Charlie?"

2. **Keyword parameters** (named arguments):
   (defun make-person (&key name (age 0) (city "Unknown"))
     {:name name :age age :city city})

   (make-person :name "Alice" :age 30)
   → {:name "Alice" :age 30 :city "Unknown"}

3. **Mixed parameters**:
   (defun complex (req1 req2 &optional opt1 &rest args &key (debug false))
     ...)

**Implementation approach (Option A - Incremental):**
- Keep existing Vec<String> structure for params
- Parse &optional and &key markers inline: ["x", "&optional", "y", "10", "&key", "z", "false"]
- Extend parse_function_parameters() at line 2748
- Extend bind_function_parameters() at line 2800
- No AST changes needed

**Files to modify:**
1. crates/ovsm/src/runtime/lisp_evaluator.rs (lines 2748, 2800)
2. Create: crates/ovsm/tests/optional_key_params_tests.rs

**Steps:**
1. Extend parse_function_parameters() to detect &optional and &key markers
2. Extend bind_function_parameters() to handle defaults and keyword matching
3. Add helper function parse_keyword_args() for :key value parsing
4. Write comprehensive tests (basic optional, basic keyword, mixed, errors)
5. Update FEATURES_STATUS.md to mark as complete

Start with parse_function_parameters() in crates/ovsm/src/runtime/lisp_evaluator.rs
